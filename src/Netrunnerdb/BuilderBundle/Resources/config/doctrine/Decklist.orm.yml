Netrunnerdb\BuilderBundle\Entity\Decklist:
    type: entity
    table: decklist
    repositoryClass: Netrunnerdb\BuilderBundle\Entity\DecklistRepository
    manyToOne:
        user:
            targetEntity: Netrunnerdb\UserBundle\Entity\User
            nullable: false
            inversedBy: decklists
            joinColumn:
                name: user_id
                referencedColumnName: id
        side:
            targetEntity: Netrunnerdb\CardsBundle\Entity\Side
            nullable: false
            inversedBy: decklists
            joinColumn:
                name: side_id
                referencedColumnName: id
        identity:
            targetEntity: Netrunnerdb\CardsBundle\Entity\Card
            nullable: false
            inversedBy: decklists
            joinColumn:
                name: identity_id
                referencedColumnName: id
        faction:
            targetEntity: Netrunnerdb\CardsBundle\Entity\Faction
            nullable: false
            inversedBy: decklists
            joinColumn:
                name: faction_id
                referencedColumnName: id
        lastPack:
            targetEntity: Netrunnerdb\CardsBundle\Entity\Pack
            nullable: false
            inversedBy: decklists
            joinColumn:
                name: last_pack_id
                referencedColumnName: id
        parent:
            targetEntity: Deck
            nullable: true
            inversedBy: children
            joinColumn:
                name: parent_deck_id
                referencedColumnName: id
        precedent:
            targetEntity: Decklist
            nullable: true
            inversedBy: successors
            joinColumn:
                name: precedent_decklist_id
                referencedColumnName: id
    oneToMany:
        slots:
            targetEntity: Decklistslot
            mappedBy: decklist
            cascade: ["persist"]
        comments:
            targetEntity: Comment
            mappedBy: decklist
            cascade: ["persist"]
        successors:
            targetEntity: Decklist
            mappedBy: precedent
        children:
            targetEntity: Deck
            mappedBy: parent
    manyToMany:
        favorites:
            targetEntity: Netrunnerdb\UserBundle\Entity\User
            inversedBy: favorites
            joinTable:
                name: favorite
                joinColumns:
                    decklist_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    user_id:
                        referencedColumnName: id
            cascade: ["persist"]
        votes:
            targetEntity: Netrunnerdb\UserBundle\Entity\User
            inversedBy: votes
            joinTable:
                name: vote
                joinColumns:
                    decklist_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    user_id:
                        referencedColumnName: id
            cascade: ["persist"]
    fields:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
        name:
            type: string
            length: 60
        description:
            type: text
            nullable: true
        creation:
            type: datetime
        signature:
            type: string
            length: 32
    lifecycleCallbacks: {  }
